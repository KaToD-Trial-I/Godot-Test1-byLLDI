[gd_scene load_steps=39 format=2]

[ext_resource path="res://Node2D.tscn" type="PackedScene" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://Main.gd" type="Script" id=3]
[ext_resource path="res://Spatial.tscn" type="PackedScene" id=4]
[ext_resource path="res://HID.tscn" type="PackedScene" id=5]
[ext_resource path="res://PhysicScene.tscn" type="PackedScene" id=6]

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 2 ), null, ExtResource( 2 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="AtlasTexture" id=2]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=3]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=4]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 32, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=5]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 48, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=6]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 0, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=7]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 16, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=8]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 32, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=9]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 48, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=10]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 0, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=11]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 16, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=12]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 32, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=13]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 48, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=14]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 0, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=15]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 16, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=16]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 32, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=17]
flags = 7
atlas = ExtResource( 2 )
region = Rect2( 48, 48, 16, 16 )

[sub_resource type="SpriteFrames" id=18]
animations = [ {
"frames": [ SubResource( 2 ), SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ) ],
"loop": true,
"name": "default",
"speed": 4.0
} ]

[sub_resource type="Animation" id=19]
resource_name = "Новая анимация"
length = 4.0
loop = true
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.25, 3.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15 ]
}

[sub_resource type="OccluderPolygon2D" id=20]
polygon = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="OccluderPolygon2D" id=21]
polygon = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="OccluderPolygon2D" id=22]
polygon = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="OccluderPolygon2D" id=23]
polygon = PoolVector2Array( 32, 32, 0, 32, 0, 0, 32, 0 )

[sub_resource type="TileSet" id=24]
0/name = "icon.png 0"
0/texture = ExtResource( 2 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 64, 64 )
0/tile_mode = 2
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 32, 32 )
0/autotile/spacing = 0
0/autotile/occluder_map = [ Vector2( 0, 0 ), SubResource( 20 ), Vector2( 0, 1 ), SubResource( 21 ), Vector2( 1, 0 ), SubResource( 22 ), Vector2( 1, 1 ), SubResource( 23 ) ]
0/autotile/navpoly_map = [  ]
0/autotile/priority_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0

[sub_resource type="GDScript" id=25]
script/source = "extends AudioStreamPlayer


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

var effect
var rec
# Called when the node enters the scene tree for the first time.
func _ready():
	effect = AudioServer.get_bus_effect(AudioServer.get_bus_index(\"New Bus\"),0)
	
#	_on_RecordButton_pressed()
	effect.set_recording_active(true)
	pass # Replace with function body.
func _on_RecordButton_pressed():
	if effect.is_recording_active():
		rec = effect.get_recording()
		effect.set_recording_active(false)
	else:
		effect.set_recording_active(true)

func _on_PlayButton_pressed():
	print(rec)
	print(rec.format)
	print(rec.mix_rate)
	print(rec.stereo)
	var data = rec.get_data()
	print(data)
	print(data.size())
	print('JJJ')

func _on_SaveButton_pressed():
	var save_path = \"rec.waw\"
	rec.save_to_wav(save_path)
#    $Status.text = \"Saved WAV file to: %s\\n(%s)\" % [save_path, ProjectSettings.globalize_path(save_path)]

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="VisualShaderNodeTexture" id=27]
source = 2

[sub_resource type="VisualShaderNodeTexture" id=30]
source = 1

[sub_resource type="VisualShader" id=28]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, UV.xy, 0.0 );
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -110, 251 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 340, 260 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( -60, 280 )
nodes/fragment/4/node = SubResource( 30 )
nodes/fragment/4/position = Vector2( -60, 420 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 4, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 28 )

[sub_resource type="GDScript" id=26]
script/source = "extends ViewportContainer


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
#	rect_scale = Vector2(rect_size.x/1024,rect_size.y/600)
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="ArrayMesh" id=31]
custom_aabb = AABB( 0, 0, 0, 10, 10, 0 )

[sub_resource type="GDScript" id=32]
script/source = "extends MeshInstance2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	var arr = []
	arr.resize(Mesh.ARRAY_MAX)
	
	var verts = PoolVector3Array()
	arr[Mesh.ARRAY_VERTEX] = verts
	
	mesh.add_surface_from_arrays(Mesh.PRIMITIVE_TRIANGLES,arr)
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[node name="Node2D" type="Node2D"]
script = ExtResource( 3 )

[node name="Node2D" parent="." instance=ExtResource( 1 )]

[node name="HID" parent="." instance=ExtResource( 5 )]

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 880.66, 36.0528 )
scale = Vector2( 0.710841, 0.768673 )
frames = SubResource( 1 )
playing = true

[node name="AnimatedSprite2" type="AnimatedSprite" parent="."]
position = Vector2( 942.051, 34.452 )
scale = Vector2( 3.13864, 2.54286 )
frames = SubResource( 18 )
frame = 2
playing = true

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 994.344, 31.105 )
scale = Vector2( 3.15421, 3.21918 )
texture = ExtResource( 2 )
vframes = 4
hframes = 4
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite"]
autoplay = "Новая анимация"
"anims/Новая анимация" = SubResource( 19 )

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource( 24 )
cell_size = Vector2( 32, 32 )
format = 1
tile_data = PoolIntArray( 65549, 0, 65536, 131084, 0, 65536, 131085, 0, 65536, 131096, 0, 65536, 131097, 0, 65536, 131098, 0, 65536, 131099, 0, 65536, 196618, 0, 65536, 196619, 0, 65536, 196620, 0, 65536, 196635, 0, 65536, 262154, 0, 65536, 262171, 0, 65536, 393243, 0, 0, 458758, 0, 65536, 458779, -1073741824, 0, 458780, 0, 1, 524290, 0, 65536, 524315, 0, 0, 524316, 0, 65537, 589851, 0, 65536, 720920, 0, 65536, 720921, 0, 65536, 786456, 0, 65536, 786457, 0, 65536, 786458, 0, 65536, 851991, 0, 65536, 851992, 0, 65536, 851994, 0, 65536, 851995, 0, 65536, 851996, 0, 65536 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
autoplay = true
bus = "New Bus"
script = SubResource( 25 )

[node name="CanvasLayer2" type="CanvasLayer" parent="."]

[node name="ViewportContainer" type="ViewportContainer" parent="CanvasLayer2"]
margin_left = 14.3711
margin_top = 65.4019
margin_right = 186.371
margin_bottom = 167.402
stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="CanvasLayer2/ViewportContainer"]
size = Vector2( 172, 102 )
handle_input_locally = false
render_target_update_mode = 3

[node name="Spatial" parent="CanvasLayer2/ViewportContainer/Viewport" instance=ExtResource( 4 )]

[node name="BackBufferCopy" type="BackBufferCopy" parent="CanvasLayer2"]
position = Vector2( 295, 84 )
rect = Rect2( -100, -100, 300, 200 )

[node name="ViewportContainer2" type="ViewportContainer" parent="CanvasLayer2/BackBufferCopy"]
material = SubResource( 29 )
margin_left = -81.0
margin_top = -64.0
margin_right = 133.0
margin_bottom = 74.0
stretch = true
script = SubResource( 26 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="CanvasLayer2/BackBufferCopy/ViewportContainer2"]
size = Vector2( 1024, 600 )
size_override_stretch = true
handle_input_locally = false
usage = 0
render_target_update_mode = 3
gui_disable_input = true

[node name="PhysicScene" parent="CanvasLayer2/BackBufferCopy/ViewportContainer2/Viewport" instance=ExtResource( 6 )]

[node name="MeshInstance2D" type="MeshInstance2D" parent="."]
position = Vector2( 859.179, 504.435 )
mesh = SubResource( 31 )
script = SubResource( 32 )
